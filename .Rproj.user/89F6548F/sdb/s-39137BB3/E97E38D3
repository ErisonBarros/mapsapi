{
    "collab_server" : "",
    "contents" : "#' Get distance matrix from the Google Maps Distance Matrix API\n#' @param origins Origins, as numeric vector of length two (lon, lat)\n#' @param destinations Destinations, as numeric vector of length two (lon, lat)\n#' @param mode Travel mode, one of: \"driving\", \"transit\", \"walking\", \"bicycling\"\n#' @param alternatives Whether to return more than one alternative (\\code{logical})\n#' @param key Google APIs key (optional)\n#' @return XML document with Google Maps Distance Matrix API response\n#' @export\n#' @examples\n#' \\dontrun{\n#' doc = google_matrix(\n#'   origins = rbind(c(34.81127, 31.89277), c(35.212085, 31.769976)),\n#'   destinations = c(34.781107, 32.085003)\n#' )\n#' locations = c(\"Haifa\", \"Tel-Aviv\", \"Jerusalem\", \"Beer-Sheva\")\n#' doc = google_matrix(\n#'   origins = locations,\n#'   destinations = locations\n#' )\n#' }\n\ngoogle_matrix = function(\n  origins,\n  destinations,\n  mode = c(\"driving\", \"transit\", \"walking\", \"bicycling\"),\n  alternatives = FALSE,\n  key = NULL\n  ) {\n  origins = encode_locations(origins)\n  destinations = encode_locations(destinations)\n  url = paste0(\n    \"https://maps.googleapis.com/maps/api/distancematrix/xml?\",\n    \"origins=\",\n    origins,\n    \"&destinations=\",\n    destinations,\n    \"&mode=\",\n    mode[1]\n  )\n  if(!is.null(key)) {\n    url = paste0(\n      url,\n      \"&key=\",\n      key\n    )\n  }\n  xml2::read_xml(url)\n}\n\n\n",
    "created" : 1506070127861.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4042897911",
    "id" : "E97E38D3",
    "lastKnownWriteTime" : 1506097964,
    "last_content_update" : 1506097964422,
    "path" : "~/Dropbox/Packages/mapsapi/R/google_matrix.R",
    "project_path" : "R/google_matrix.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}